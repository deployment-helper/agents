# filepath: .github/workflows/deploy.yml
name: Build and Deploy to Cloud Run

on:
  release:
    types: [published] # Trigger deployment ONLY when a release is published

env:
  PROJECT_ID: chat-gpt-videos # TODO: Replace with your GCP Project ID
  GAR_LOCATION: asia-south1 # TODO: Replace with your Artifact Registry region (e.g., us-central1)
  GAR_REPOSITORY: agents # TODO: Replace with your Artifact Registry repo name
  SERVICE_NAME: ai-agents # Cloud Run service name
  REGION: asia-south1 # TODO: Replace with your Cloud Run service region

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write" # Needed for Workload Identity Federation

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Authenticate to Google Cloud using Workload Identity Federation
      # Configure WIF in your GCP project first:
      # https://cloud.google.com/iam/docs/workload-identity-federation-with-github-actions
      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: "projects/${{ env.PROJECT_ID }}/locations/global/workloadIdentityPools/pool1/providers/github" # TODO: Replace with your WIF details
          service_account: "github-action@chat-gpt-videos.iam.gserviceaccount.com" # TODO: Replace with your Service account email

      # Setup gcloud CLI
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      # Configure Docker to use the gcloud command-line tool as a credential helper
      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet

      # Build and push Docker image
      - name: Build and Push Docker Image
        run: |
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.SERVICE_NAME }}:${{ github.sha }}" .
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.SERVICE_NAME }}:${{ github.sha }}"

      # Deploy to Cloud Run
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.REGION }}
          image: "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.SERVICE_NAME }}:${{ github.sha }}"
          platform: managed
          flags: "--port=8000 --allow-unauthenticated" # Adjust flags as needed (e.g., remove --allow-unauthenticated for private services)
          env_vars: |
            LLM_PROVIDER=openai
            LLM_MODEL_NAME=gpt-4o-mini
          secrets: |
            LLM_API_KEY=LLM_API_KEY:latest
            VIDEO_API_BASE_URL=VIDEO_API_BASE_URL:latest
            VIDEO_API_KEY=VIDEO_API_KEY:latest
            SERVER_API_KEY=SERVER_API_KEY:latest

      # Optional: Output the deployed service URL
      - name: Show Deployed URL
        run: echo "Deployed to ${{ steps.deploy.outputs.url }}"
